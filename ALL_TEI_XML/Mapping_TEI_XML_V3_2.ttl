@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dct: <http://purl.org/dc/terms/>.
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix lexinfo: <http://www.lexinfo.net/ontology/2.0/lexinfo#>.
@prefix lime: <http://www.w3.org/ns/lemon/lime#> .
@prefix oldcan: <https://explorations4u.acdh.oeaw.ac.at/ontology/oldcan#>.
@prefix ontolex: <http://www.w3.org/ns/lemon/ontolex#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix skos: <http://www.w3.org/2004/02/skos#>.
@prefix wbo: <https://exploreat.oeaw.ac.at/>.

<#FormTriplesMapPronunciationIPA>
a rr:TriplesMap;
rr:logicalTable [ rr:sqlQuery """

SELECT pron,notation, form_id FROM pronunciation where notation='ipa';
    """ ];
	rr:subjectMap [
		rr:template "https://exploreat.oeaw.ac.at/Form/{form_id}" ;
		rr:class ontolex:Form ;
		rr:graph wbo:lexicon_graph ;] ;
	#Check how the phonetic representation can be represented here
	rr:predicateObjectMap [
		rr:predicate ontolex:phoneticRep ;
		rr:objectMap [ rr:column "pron";
		rr:language "ipa"; ] ;
		rr:graph wbo:lexicon_graph ;];

.

<#FormTriplesMapPronunciationTustep>
a rr:TriplesMap;
rr:logicalTable [ rr:sqlQuery """

SELECT pron,notation, form_id FROM pronunciation where notation='Tustep';
    """ ];
	rr:subjectMap [
		rr:template "https://exploreat.oeaw.ac.at/Form/{form_id}" ;
		rr:class ontolex:Form ;
		rr:graph wbo:lexicon_graph ;] ;
	#Check how the phonetic representation can be represented here
	rr:predicateObjectMap [
		rr:predicate ontolex:phoneticRep ;
		rr:objectMap [ rr:column "pron";
		rr:language "tustep"; ] ;
		rr:graph wbo:lexicon_graph ;];

.


# This creates a lexical entry and attach the sense  to it
<#LexicalEntrySenseTriplesMap>
a rr:TriplesMap;
rr:logicalTable [ rr:sqlQuery """

select e.id, s.sense_id from
entry e inner join sense s on e.entry_id= s.entry_id;
    """ ];
	rr:subjectMap [
		rr:template "https://exploreat.oeaw.ac.at/LexicalEntry/{id}" ;
		rr:class ontolex:LexicalEntry ;
		 ;] ;

	rr:predicateObjectMap [
		rr:predicate ontolex:sense ;
		rr:objectMap [
			rr:template "https://exploreat.oeaw.ac.at/Sense/{sense_id}" ;
				rr:graph wbo:lexicon_graph ;];
				] ;
.

<#SenseTriplesMap>
a rr:TriplesMap;
rr:logicalTable [ rr:sqlQuery """

select s.sense_id, sense_definition from sense s left join sense_definition sd
on s.sense_id =sd.sense_id;
    """ ];
	rr:subjectMap [
		rr:template "https://exploreat.oeaw.ac.at/Sense/{sense_id}" ;
		rr:class ontolex:LexicalSense ;
		rr:graph wbo:lexicon_graph ;] ;

	rr:predicateObjectMap [
	 rr:predicate skos:definition ;
		rr:predicate dct:description ;
		rr:objectMap [ rr:column "sense_definition";
		rr:language "de"; ] ; # "de is used in all the columns"
		rr:graph wbo:lexicon_graph ;];

.

#This mapping generates the part of speech of the entries
<#LexicalEntryPOSTriplesMap>
a rr:TriplesMap;
rr:logicalTable [ rr:sqlQuery """

SELECT  e.id,
CASE pos
WHEN  'Verb' THEN 'verb'
WHEN   'subst' THEN 'noun'
WHEN   'subst subst' THEN 'noun'
WHEN   'Pron' THEN 'pronoun'
WHEN   'adv' THEN 'adverb'
WHEN   'adj' THEN 'adjective'
WHEN   'interj' THEN 'interjection'
WHEN   'num' THEN 'numeral'
WHEN   'conj' THEN 'conjuction'
WHEN   'prep' THEN 'fusedPreposition'
WHEN   'verb Verb' THEN 'verb'
WHEN   'adj adj' THEN 'adjective'
WHEN   'adv adv' THEN 'adverb'
ELSE 'Unknown'
END lexinfopos
from grammar_group g left join entry e on g.entry_id =e.entry_id;
    """ ];
	rr:subjectMap [
		rr:template "https://exploreat.oeaw.ac.at/LexicalEntry/{id}" ;
		rr:class ontolex:LexicalEntry ;
		rr:graph wbo:lexicon_graph ;] ;

	rr:predicateObjectMap [
		rr:predicate lexinfo:partOfSpeech ;
		rr:objectMap [
			rr:template "http://www.lexinfo.net/ontology/2.0/lexinfo#{lexinfopos}" ;];
			rr:graph wbo:lexicon_graph ;];
.


<#IsAnswerOfTriplesMap>
a rr:TriplesMap;
rr:logicalTable [ rr:sqlQuery """
select entry_id, id as question_id,  questionnaire_no,  question_no from question_entry q, question_id qid
where q.questionnaire_no =qid.fragebogen_id
and q.question_no=qid.nummer
;


    """ ];
	rr:subjectMap [
		rr:template "https://exploreat.oeaw.ac.at/LexicalEntry/{entry_id}" ;
		rr:class ontolex:LexicalEntry ;
		rr:graph wbo:lexicon_graph ;] ;

	rr:predicateObjectMap [
		rr:predicate oldcan:isAnswerOf;
		rr:objectMap [ rr:template "https://exploreat-questionnaireexplorer.hephaistos.arz.oeaw.ac.at/Question/{question_id}" ;

		] ;
		rr:graph wbo:lexicon_graph ;];

.


<#HasAnswerTriplesMap>
a rr:TriplesMap;
rr:logicalTable [ rr:sqlQuery """
select entry_id, id as question_id,  questionnaire_no,  question_no from question_entry q, question_id qid
where q.questionnaire_no =qid.fragebogen_id
and q.question_no=qid.nummer
;


    """ ];
	rr:subjectMap [
	rr:template "https://exploreat-questionnaireexplorer.hephaistos.arz.oeaw.ac.at/Question/{question_id}" ;
	rr:class ontolex:LexicalEntry ;
	rr:graph wbo:lexicon_graph ;] ;

	rr:predicateObjectMap [
		rr:predicate oldcan:hasAnswer;
		rr:objectMap [ 	rr:template "https://exploreat.oeaw.ac.at/LexicalEntry/{entry_id}" ;
				] ;
		rr:graph wbo:lexicon_graph ;];

.
# This creates a etymology entry and attach the sense  to it
<#LexicalEntryEtymTriplesMap>
a rr:TriplesMap;
rr:logicalTable [ rr:sqlQuery """

select e.id, et.text as etymtext from
entry e inner join etymology et on e.entry_id= et.entry_id;
    """ ];
	rr:subjectMap [
		rr:template "https://exploreat.oeaw.ac.at/LexicalEntry/{id}" ;
		rr:class ontolex:LexicalEntry ;
		 ;] ;

	rr:predicateObjectMap [
		rr:predicate lexinfo:etymology ;
		rr:objectMap [ rr:column "etymtext";
		rr:language "de"; ] ; # "de is used in all the columns"
				] ;
.


